{"version":3,"sources":["src/sass/_boxes.scss","src/sass/_colors.scss","src/sass/pages/_join.scss","src/sass/_forms.scss","src/sass/_lists.scss","src/sass/_pills.scss","src/sass/_layout.scss","src/sass/_variables.scss","src/sass/_buttons.scss","src/sass/_mq.scss","src/sass/_divider.scss","src/sass/_avatars.scss","src/sass/_status.scss","src/sass/_styleguide.scss"],"names":[],"mappings":"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","file":"docs/app.css","sourcesContent":["@import './mq';\n@import './variables';\n@import './colors';\n\n@each $key, $value in $background-colors {\n  .#{$key}-box {\n    color: map-get($foreground-colors, $key);\n    background-color: map-get($background-colors, $key);\n    border-color: map-get($border-colors, $key)\n  }\n}\n\n@mixin box($breakpoints) {\n  @extend .box-box;\n  padding: $box-padding-height $box-padding-width 0 $box-padding-width;\n\n  @each $breakpoint in $breakpoints {\n    @include mq($from: $breakpoint) {\n      width: $breakpoint;\n      border-top-left-radius: $box-border-radius;\n      border-top-right-radius: $box-border-radius;\n    }\n  }\n\n  @include mq($until: nth($breakpoints, 1)) {\n    width: 100%;\n  }\n\n  >h1 {\n    font-size: em(32);\n    font-weight: bold;\n    margin: 0 0 em(20, 32) 0;\n  }\n\n  > .content {\n    margin: 0 0 em(20) 0;\n  }\n\n  .footer {\n    position: relative;\n    top: rem($box-border-radius);\n    @extend .box-footer-box;\n\n    @include mq($from: nth($breakpoints, 1)) {\n      border-bottom-left-radius: rem($box-border-radius);\n      border-bottom-right-radius: rem($box-border-radius);\n    }\n\n    margin-top: #{rem($box-footer-margin - $box-border-radius)};\n    margin-left: -#{rem($box-padding-width)} ;\n    margin-bottom: 0 ;\n    margin-right: -#{rem($box-padding-width)};\n    text-align: center;\n    padding: em(20, 14);\n    font-size: em(14);\n\n    >*:last-child {\n      margin-bottom: 0;\n    }\n  }\n}\n","$colors: (\n        primary: #f76303,\n        secondary: #9b9b9b,\n        google: #d10000,\n        facebook: #4a4e9e,\n        faded: #e5e5e5,\n        box-footer: #4a4a4a,\n        input: #4a4a4a,\n        label: #4a4a4a,\n        list-header: #4a1f50,\n        list-section: #4a1f50,\n        list-divider: #eeeeee,\n        link: #1778e9,\n);\n\n$status-colors: (\n        ok: #00cc5a,\n        unknown: #cc8f00,\n);\n\n$background-colors: (\n        primary: map-get($colors, primary),\n        secondary: #fff,\n        google: map-get($colors, google),\n        facebook: map-get($colors, facebook),\n        box: #fff,\n        box-footer: #e7f1fc,\n        input: #fff,\n        list-header: #d5cfd6,\n        list-section: #e5e3e5,\n        list-divider: #eeeeee,\n        pill: #45294e,\n        inverted: #9b9b9b,\n);\n\n$foreground-colors: (\n        primary: #fff,\n        secondary: #9b9b9b,\n        google: #fff,\n        facebook: #fff,\n        box: #000,\n        box-footer: map-get($colors, box-footer),\n        input: #4a4a4a,\n        list-header: #000,\n        list-section: #727172,\n        list-divider: #d9d9d9,\n        pill: #fff,\n        inverted: #fff,\n);\n\n$border-colors: (\n        primary: map-get($colors, primary),\n        secondary: map-get($colors, secondary),\n        google: map-get($colors, google),\n        facebook: map-get($colors, facebook),\n        box-footer: map-get($background-colors, box-footer),\n        input: #ccc,\n);\n\n","@import '../variables';\n\n.federated-buttons {\n  display: flex;\n  margin: 0 -#{$button-spacing/2};\n\n  button {\n    flex-grow: 1;\n    flex-basis: 100%;\n    margin: 0 $button-spacing/2;\n  }\n}\n\n.login.box {\n  @include box(480px 640px);\n\n  @include mq($until: 640px) {\n    .federated-buttons {\n      font-size: em(12);\n    }\n  }\n\n  @include mq($until: 480px) {\n    .cancel { display: none; }\n\n    .federated-buttons {\n      font-size: em(14);\n      flex-direction: column;\n      margin: -#{$button-spacing/2};\n\n      button {\n        margin: $button-spacing/2 0;\n      }\n    }\n  }\n}\n\n.join.box {\n  @include box(480px);\n\n  .federated-buttons {\n    flex-direction: column;\n    margin-top: em(20);\n\n    button {\n      margin-bottom: em(13);\n    }\n  }\n}","@import './variables';\n@import './colors';\n\nfieldset {\n  border: 0;\n  margin: 0 0 em(20) 0;\n  padding: 0;\n  display: table;\n  position: relative;\n}\n\nlabel {\n  color: map-get($foreground-colors, label);\n  font-weight: bold;\n  display: block;\n  margin-bottom: em(10);\n\n  .help {\n    float: right;\n    font-weight: normal;\n    font-size: em(14);\n  }\n}\n\ninput {\n  border-radius: $small-radius;\n  border-width: 2px;\n  border-style: solid;\n  @extend .input-box;\n  font-size: em(18);\n  padding: 10px;\n  display: block;\n  width: 100%;\n}\n\nform .actions {\n  margin: em(40) 0;\n  width: 100%;\n\n  button.submit {\n    float: right;\n    width: em(200);\n  }\n\n  @include mq($until: 470px) {\n    display: flex;\n    button {\n    }\n    button.submit {\n      float: none;\n      width: auto;\n      flex-grow: 1;\n    }\n  }\n}\n\n.form {\n}\n","@import './colors';\n@import './variables';\n@import './divider';\n\n@mixin list-item {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 3.75em;\n  width: 100%;\n  padding: 0 $list-padding 0 $list-padding;\n\n  .avatar {\n    width: 40px;\n    height: 40px;\n  }\n\n  > p {\n    display: block;\n    flex-grow: 1;\n  }\n\n  .subline {\n    display: block;\n    font-size: em(12);\n  }\n\n  .actions {\n    flex-shrink: 1;\n    display: flex;\n  }\n}\n\n.list {\n  display: block;\n\n  .header {\n    @include list-item;\n    height: 3.125em;\n    font-weight: bold;\n    @extend h2;\n    @extend .list-header-box;\n  }\n\n  .section {\n    display: block;\n    height: auto;\n\n    > div {\n      @include list-item;\n      border: 1px solid map-get($background-colors, list-section)\n    }\n\n    .header {\n      font-size: 0.875em;\n      @extend .list-section-box;\n\n      span {\n        display: block;\n      }\n\n      span:first-child {\n        flex-grow: 1;\n      }\n    }\n  }\n\n  .divider {\n    @include divider(map-get($colors, faded), 0);\n    @include list-item;\n    height: 2.5em;\n    @extend .list-divider-box;\n  }\n}\n",".pill {\n  @extend .pill-box;\n  display: flex;\n  align-items: center;\n  align-content: center;\n  text-align: center;\n  height: em(30);\n  border-radius: em(15);\n  padding: 0 em(20);\n  font-size: em(14);\n}","@import './variables';\n\nh1, h2, h3, h4, h5 {\n  margin: 0;\n}\n\nh1 {\n  font-size: 1.25em;\n}\n\nh2 {\n  font-size: 1.125em\n}\n\nh3 {\n\n}\n\nh4 {\n\n}\n\nh5 {\n\n}\n\n.header {\n  font-size: 1.25em;\n  height: 4.375em;\n  display: flex;\n  align-items: center;\n  padding: 0 $list-padding 0 $list-padding;\n\n  .avatar {\n    width: em(30);\n    height: em(30);\n  }\n}\n","$browser-context: 16;\n$default-font: 'Open Sans', sans-serif;\n\n@function strip-unit($number) {\n  @if type-of($number) == 'number' and not unitless($number) {\n    @return $number / ($number * 0 + 1);\n  }\n\n  @return $number;\n}\n@function em($pixels, $context: $browser-context) {\n  @return (strip-unit($pixels) / $context) + 0em;\n}\n@function rem($pixels, $context: $browser-context) {\n  @if unit($pixels) == 'em' {\n    @return strip-unit($pixels) + 0rem;\n  }\n\n  @return (strip-unit($pixels)/$context) + 0rem;\n}\n@function px($em, $context: $browser-context){\n  @return (strip-unit($em) * $context) + 0px;\n}\n\n$small-radius: em(6);\n$large-radius: em(12);\n\n$button-spacing: em(20);\n$list-padding: em(20);\n\n$box-border-radius: em(12);\n$box-padding-height: em(30);\n$box-padding-width: em(40);\n$box-footer-margin: em(40);\n","@import './variables';\n@import './colors';\n\n$button-default-radius: $small-radius;\n$button-default-border: 2px solid map-get($colors, secondary);\n$button-default-padding: 10px;\n\n@each $key, $value in $background-colors {\n  button.#{$key} {\n    color: map-get($foreground-colors, $key);\n    background-color: map-get($background-colors, $key);\n    border-color: map-get($border-colors, $key)\n  }\n}\n\nbutton {\n  background: transparent;\n  border-radius: $button-default-radius;\n  border: $button-default-border;\n  padding: $button-default-padding;\n  font-size: 1em;\n  font-family: $default-font;\n  font-weight: bold;\n  cursor: pointer;\n\n  &:not(:last-child) {\n    //margin-right: $button-spacing / 2;\n    //\n    //@include mq($from: 470px) {\n    //  margin-right: $button-spacing;\n    //}\n  }\n\n  &:hover {\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0px 0px 5px rgba(0,0,0,.33);\n  }\n\n  &:active {\n    animation: button-expand .2s both;\n    background-image: linear-gradient(rgba(255,255,255,.33),\n            rgba(255,255,255,.33));\n  }\n}\n\n@keyframes button-expand {\n  @for $i from 1 through 49 {\n    #{$i}% {\n      background-image: linear-gradient(90deg,\n            rgba(255,255,255,0) 0%,\n            rgba(255, 255, 255, .33) (50 - $i + 0%),\n            rgba(255, 255, 255, .33) (50 + $i + 0%),\n            rgba(255,255,255,0) 100%);\n    }\n  }\n}\n\nbutton.cancel {\n  @extend button.secondary;\n  font-weight: normal;\n}\n\nbutton.submit {\n  @extend button.primary;\n}\n","@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n// See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n        mobile:  320px,\n        tablet:  740px,\n        desktop: 980px,\n        wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n  @if unitless($px) {\n    @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n    @return mq-px2em($px * 1px, $base-font-size);\n  } @else if unit($px) == em {\n    @return $px;\n  }\n  @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n  @if map-has-key($breakpoints, $name) {\n    @return map-get($breakpoints, $name);\n  } @else {\n    @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n  }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n  $from: false,\n  $until: false,\n  $and: false,\n  $media-type: $mq-media-type,\n  $breakpoints: $mq-breakpoints,\n  $responsive: $mq-responsive,\n  $static-breakpoint: $mq-static-breakpoint\n) {\n  $min-width: 0;\n  $max-width: 0;\n  $media-query: '';\n\n  // From: this breakpoint (inclusive)\n  @if $from {\n    @if type-of($from) == number {\n      $min-width: mq-px2em($from);\n    } @else {\n      $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n    }\n  }\n\n  // Until: that breakpoint (exclusive)\n  @if $until {\n    @if type-of($until) == number {\n      $max-width: mq-px2em($until);\n    } @else {\n      $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n    }\n  }\n\n  // Responsive support is disabled, rasterize the output outside @media blocks\n  // The browser will rely on the cascade itself.\n  @if $responsive == false {\n    $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n    $target-width: mq-px2em($static-breakpoint-width);\n\n    // Output only rules that start at or span our target width\n    @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n    ) {\n      @content;\n    }\n  }\n\n    // Responsive support is enabled, output rules inside @media queries\n  @else {\n    @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n    @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n    @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n    // Remove unnecessary media query prefix 'all and '\n    @if ($media-type == 'all' and $media-query != '') {\n      $media-type: '';\n      $media-query: str-slice(unquote($media-query), 6);\n    }\n\n    @media #{$media-type + $media-query} {\n      @content;\n    }\n  }\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n  $new-breakpoint: ($name: $width);\n  $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n  body:before {\n    background-color: #FCF8E3;\n    border-bottom: 1px solid #FBEED5;\n    border-left: 1px solid #FBEED5;\n    color: #C09853;\n    font: small-caption;\n    padding: 3px 6px;\n    pointer-events: none;\n    position: fixed;\n    right: 0;\n    top: 0;\n    z-index: 100;\n\n    // Loop through the breakpoints that should be shown\n    @each $show-breakpoint in $show-breakpoints {\n      $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n      @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n        content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n      }\n    }\n  }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n  @include mq-show-breakpoints;\n}\n","@mixin divider($color, $padding) {\n  display: block;\n  text-align: center;\n  overflow: hidden;\n  white-space: nowrap;\n\n  span {\n    position: relative;\n    display: inline-block;\n\n    &:before, &:after {\n      content: \"\";\n      position: absolute;\n      top: 50%;\n      width: 9999px;\n      height: 1px;\n      background: $color;\n    }\n\n    &:before {\n      right: 100%;\n      margin-right: $padding;\n    }\n\n    &:after {\n      left: 100%;\n      margin-left: $padding;\n    }\n  }\n}\n","@import './variables';\n\n.avatar {\n  object-fit: cover;\n  margin-right: 10px;\n\n  &.rounded {\n    border-radius: $small-radius;\n  }\n\n  &.round {\n    border-radius: 50%;\n  }\n}\n","@import './variables';\n@import './colors';\n\n$status-size: 10px;\n\n@each $key, $value in $status-colors {\n  .#{$key} {\n    color: $value;\n  }\n}\n\n.status {\n  position: relative;\n\n  &:after {\n    content: '';\n    border-radius: 50%;\n    width: $status-size;\n    height: $status-size;\n    display: block;\n    position: absolute;\n    border: 2px solid white;\n    right: $status-size / 2;\n    bottom: $status-size / 2;\n  }\n\n  @each $key, $value in $status-colors {\n    &.#{$key}:after {\n      background: $value;\n    }\n  }\n}","@import './variables';\n@import './boxes';\n@import './layout';\n@import './buttons';\n@import './divider';\n@import './forms';\n@import './lists';\n@import './avatars';\n@import './status';\n@import './pills';\n\n@import './pages/join';\n\nhtml, body {\n  font-size: #{$browser-context}px;\n  font-family: $default-font;\n  margin: 0;\n  padding: 0;\n}\n\nhtml, body, * {\n  box-sizing: border-box;\n}\n\np {\n  margin: 0;\n  font-size: em(14);\n  color: map-get($colors, label);\n}\n\np.note {\n  font-size: em(12);\n}\n\na {\n  color: map-get($colors, link);\n  text-decoration: none;\n\n  &:hover {\n    text-decoration: underline;\n  }\n}\n\nstrong, .strong {\n  font-weight: bold;\n}\n\n.divider {\n  @include divider(map-get($colors, faded), 0.625em);\n  color: map-get($colors, secondary);\n  text-transform: uppercase;\n  font-weight: bold;\n  margin: 0 0 20px 0;\n}\n\n\nsection {\n  margin: 0;\n}\n\n.photo-background {\n  background-position: 50% 50%;\n  background-size: cover;\n  width: 100vw;\n  height: 100vh;\n\n  > div {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    align-content: center;\n    justify-content: center;\n\n    width: 100%;\n  }\n\n  > h1 {\n    display: block;\n    color: #fff;\n\n    padding: em(40);\n\n    @include mq($until: 470px) {\n      padding: em(30);\n    }\n  }\n}"]}